---
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
exclude: ^attic/$
default_install_hook_types: ["pre-commit", "commit-msg"]
default_stages: ["commit"]
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: check-added-large-files
      - id: check-ast
      - id: check-json
      - id: check-merge-conflict
      - id: check-xml
      - id: check-yaml
      - id: debug-statements
      - id: end-of-file-fixer
      - id: requirements-txt-fixer
      - id: mixed-line-ending
        args: ['--fix=auto']  # replace 'auto' with 'lf' to enforce Linux/Mac line endings or 'crlf' for Windows
      - id: no-commit-to-branch
        args: ['--branch', 'main']

  # - repo: https://github.com/ansible/ansible-lint.git
  #   rev: v6.22.0
  #   hooks:
  #     - id: ansible-lint
  #       stages: [commit]
  #       files: \.(yaml|yml)$

  - repo: 'https://github.com/gruntwork-io/pre-commit'
    rev: v0.1.23
    hooks:
      - id: 'shellcheck'
        stages: [commit]
        # args: ["--enable require-variable-braces,deprecate-which"]

  - repo: local
    hooks:
      - id: encryption-check
        name: Ansible Vault Encryption Check
        description: Checks that vault files are encrypted
        entry: /usr/local/bin/encryption-check.sh
        files: ((^|/)vault|vault.y[a]{0,1}ml$|.vault$|^authorized_keys)
        language: script
        stages: [commit]
      - id: commit-msg
        name: conventional commit messages
        language: pygrep
        entry: '^(chore|test|feat|fix|build|docs|refactor)!?: ((?!.*(ing))(?!.*(ed))).*$'
        args: [--multiline, --negate]
        stages: [commit-msg]

  # - repo: https://github.com/pycqa/isort
  #   rev: 5.12.0
  #   hooks:
  #     - id: isort
  #       name: isort (python)

  # - repo: https://github.com/psf/black
  #   rev: 23.11.0 # stable 0
  #   hooks:
  #     - id: black
  #       language_version: python3

  # - repo: https://github.com/PyCQA/flake8
  #   rev: 6.1.0
  #   hooks:
  #     - id: flake8
  #       args: [
  #         '--max-line-length=88',
  #         '--exclude=attic/*,files/cloudflare/*',
  #         '--ignore=E800,WPS229,WPS602,WPS605'
  #       ]
  #     ## You can add flake8 plugins via `additional_dependencies`:
  #       additional_dependencies: ['wemake-python-styleguide']
